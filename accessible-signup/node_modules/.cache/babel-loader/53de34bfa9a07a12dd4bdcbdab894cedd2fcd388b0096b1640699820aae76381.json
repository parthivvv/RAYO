{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parth\\\\Desktop\\\\accessible-signup\\\\src\\\\AccessibleForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AccessibleForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccessibleForm = ({\n  formType\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Clear form data and errors when formType changes\n  useEffect(() => {\n    // Reset form data, errors, and submission state when formType changes\n    setFormData({\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n    setFormErrors({});\n    setIsSubmitting(false); // Reset isSubmitting to false on form type change\n  }, [formType]);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const errors = validate(formData);\n    setFormErrors(errors);\n\n    // Only proceed with setting isSubmitting if there are no errors\n    if (Object.keys(errors).length === 0) {\n      setIsSubmitting(true);\n    } else {\n      setIsSubmitting(false); // Ensure isSubmitting is false if there are errors\n    }\n  };\n  useEffect(() => {\n    if (Object.keys(formErrors).length === 0 && isSubmitting) {\n      // Handle form submission logic here\n      alert('Form submitted!');\n      setIsSubmitting(false);\n    }\n  }, [formErrors]);\n  const validate = values => {\n    const errors = {};\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Simple regex for email validation\n\n    if (!values.email) {\n      errors.email = 'Email is required';\n    } else if (!emailRegex.test(values.email)) {\n      errors.email = 'Email is invalid';\n    }\n    if (!values.password) {\n      errors.password = 'Password is required';\n    }\n    if (formType === 'signup') {\n      if (!values.name) {\n        errors.name = 'Name is required';\n      }\n      if (values.password !== values.confirmPassword) {\n        errors.confirmPassword = 'Passwords do not match';\n      }\n    }\n    return errors;\n  };\n  useEffect(() => {\n    if (isSubmitting) {\n      const firstErrorField = Object.keys(formErrors)[0];\n      if (firstErrorField) {\n        document.getElementById(firstErrorField).focus();\n      }\n    }\n  }, [formErrors, isSubmitting]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    \"aria-labelledby\": \"formHeading\",\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"formHeading\",\n      children: formType === 'signup' ? 'SIGN UP' : 'SIGN IN'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), formType === 'signup' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        \"aria-describedby\": \"nameError\",\n        \"aria-invalid\": !!formErrors.name,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), formErrors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"nameError\",\n        className: \"form__error\",\n        children: formErrors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        \"aria-describedby\": \"emailError\",\n        \"aria-invalid\": !!formErrors.email,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), formErrors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        className: \"form__error\",\n        children: formErrors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        \"aria-describedby\": \"passwordError\",\n        \"aria-invalid\": !!formErrors.password,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), formErrors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"passwordError\",\n        className: \"form__error\",\n        children: formErrors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), formType === 'signup' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirmPassword\",\n        name: \"confirmPassword\",\n        value: formData.confirmPassword,\n        onChange: handleChange,\n        \"aria-describedby\": \"confirmPasswordError\",\n        \"aria-invalid\": !!formErrors.confirmPassword,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), formErrors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"confirmPasswordError\",\n        className: \"form__error\",\n        children: formErrors.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: formType === 'signup' ? 'SIGN UP' : 'SIGN IN'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(AccessibleForm, \"+kelBBUlhEzxU4DdOfF/F2fbDzM=\");\n_c = AccessibleForm;\nexport default AccessibleForm;\nvar _c;\n$RefreshReg$(_c, \"AccessibleForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AccessibleForm","formType","_s","formData","setFormData","name","email","password","confirmPassword","formErrors","setFormErrors","isSubmitting","setIsSubmitting","handleChange","event","value","target","handleSubmit","preventDefault","errors","validate","Object","keys","length","alert","values","emailRegex","test","firstErrorField","document","getElementById","focus","onSubmit","noValidate","children","id","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","required","className","_c","$RefreshReg$"],"sources":["C:/Users/parth/Desktop/accessible-signup/src/AccessibleForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './AccessibleForm.css';\r\n\r\nconst AccessibleForm = ({ formType }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Clear form data and errors when formType changes\r\n  useEffect(() => {\r\n    // Reset form data, errors, and submission state when formType changes\r\n    setFormData({\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n    });\r\n    setFormErrors({});\r\n    setIsSubmitting(false); // Reset isSubmitting to false on form type change\r\n  }, [formType]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const errors = validate(formData);\r\n    setFormErrors(errors);\r\n    \r\n    // Only proceed with setting isSubmitting if there are no errors\r\n    if (Object.keys(errors).length === 0) {\r\n      setIsSubmitting(true);\r\n    } else {\r\n      setIsSubmitting(false); // Ensure isSubmitting is false if there are errors\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    if (Object.keys(formErrors).length === 0 && isSubmitting) {\r\n      // Handle form submission logic here\r\n      alert('Form submitted!');\r\n      setIsSubmitting(false);\r\n    }\r\n  }, [formErrors]);\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Simple regex for email validation\r\n\r\n    if (!values.email) {\r\n      errors.email = 'Email is required';\r\n    } else if (!emailRegex.test(values.email)) {\r\n      errors.email = 'Email is invalid';\r\n    }\r\n    if (!values.password) {\r\n      errors.password = 'Password is required';\r\n    }\r\n    if (formType === 'signup') {\r\n      if (!values.name) {\r\n        errors.name = 'Name is required';\r\n      }\r\n      if (values.password !== values.confirmPassword) {\r\n        errors.confirmPassword = 'Passwords do not match';\r\n      }\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSubmitting) {\r\n      const firstErrorField = Object.keys(formErrors)[0];\r\n      if (firstErrorField) {\r\n        document.getElementById(firstErrorField).focus();\r\n      }\r\n    }\r\n  }, [formErrors, isSubmitting]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} aria-labelledby=\"formHeading\" noValidate>\r\n      <h1 id=\"formHeading\">{formType === 'signup' ? 'SIGN UP' : 'SIGN IN'}</h1>\r\n      {formType === 'signup' && (\r\n        <div>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            aria-describedby=\"nameError\"\r\n            aria-invalid={!!formErrors.name}\r\n            required\r\n          />\r\n          {formErrors.name && (\r\n            <div id=\"nameError\" className=\"form__error\">\r\n              {formErrors.name}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          aria-describedby=\"emailError\"\r\n          aria-invalid={!!formErrors.email}\r\n          required\r\n        />\r\n        {formErrors.email && (\r\n          <div id=\"emailError\" className=\"form__error\">\r\n            {formErrors.email}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          aria-describedby=\"passwordError\"\r\n          aria-invalid={!!formErrors.password}\r\n          required\r\n        />\r\n        {formErrors.password && (\r\n          <div id=\"passwordError\" className=\"form__error\">\r\n            {formErrors.password}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {formType === 'signup' && (\r\n        <div>\r\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleChange}\r\n            aria-describedby=\"confirmPasswordError\"\r\n            aria-invalid={!!formErrors.confirmPassword}\r\n            required\r\n          />\r\n          {formErrors.confirmPassword && (\r\n            <div id=\"confirmPasswordError\" className=\"form__error\">\r\n              {formErrors.confirmPassword}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      <button type=\"submit\">{formType === 'signup' ? 'SIGN UP' : 'SIGN IN'}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AccessibleForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}