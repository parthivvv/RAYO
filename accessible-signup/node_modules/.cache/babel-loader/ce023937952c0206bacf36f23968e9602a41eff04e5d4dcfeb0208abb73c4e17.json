{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parth\\\\Desktop\\\\RAYO\\\\accessible-signup\\\\src\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ChatBot.css';\nimport responses from './test.json'; // Adjust the import path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const messagesEndRef = useRef(null);\n  const chatLiveRegionRef = useRef(null); // Ref for the live region to announce updates\n\n  const speakWithDelay = text => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      speechSynthesis.cancel(); // Clear any previously scheduled speech synthesis\n      setTimeout(() => {\n        speechSynthesis.speak(utterance); // Delayed speech synthesis\n      }, 100); // Adjust the delay time as needed\n    } else {\n      console.error(\"Your browser does not support speech synthesis.\");\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n  const speak = text => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.rate = 0.8; // Adjust the speaking rate; lower values mean slower speech\n      speechSynthesis.speak(utterance);\n    }\n  };\n  const handleUserInput = event => {\n    setUserInput(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!userInput.trim()) return;\n    const newUserMessage = {\n      text: userInput,\n      author: 'user'\n    };\n    setMessages([...messages, newUserMessage]);\n    setUserInput('');\n    // Optionally, speak the user's message\n    // speak(`You said: ${newUserMessage.text}`);\n    respondToUserInput(newUserMessage.text);\n  };\n  const respondToUserInput = input => {\n    const matchedResponse = responses.find(response => input.trim().toLowerCase() === response.Query.toLowerCase());\n    const botResponseText = matchedResponse ? matchedResponse.Response : \"Sorry, I don't understand that.\";\n    setTimeout(() => {\n      setMessages(messages => [...messages, {\n        text: botResponseText,\n        author: 'bot'\n      }]);\n      speak(botResponseText); // This should trigger the speech synthesis\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cb-chatbot\",\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cb-messages\",\n      ref: chatLiveRegionRef,\n      \"aria-relevant\": \"additions\",\n      \"aria-live\": \"assertive\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `cb-message cb-${message.author}`,\n        tabIndex: \"0\",\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"cb-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onMouseEnter: () => speakWithDelay(\"Click to talk to the chatbot\"),\n        onFocus: () => speakWithDelay(\"Type in your query and press enter\"),\n        className: \"cb-input\",\n        type: \"text\",\n        value: userInput,\n        onChange: handleUserInput,\n        placeholder: \"Ask me something...\",\n        \"aria-label\": \"Type your message here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onMouseEnter: () => speakWithDelay(\"Click to send\"),\n        onFocus: () => speakWithDelay(\"Press enter to send\"),\n        type: \"submit\",\n        className: \"cb-button\",\n        style: {\n          padding: '5px 5px',\n          fontsize: '1.4em',\n          height: '60px',\n          width: 'auto'\n        },\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"eB5576KiePxY4ciODCvAg9QtVtw=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","responses","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","userInput","setUserInput","messagesEndRef","chatLiveRegionRef","speakWithDelay","text","window","utterance","SpeechSynthesisUtterance","speechSynthesis","cancel","setTimeout","speak","console","error","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","rate","handleUserInput","event","target","value","handleSubmit","preventDefault","trim","newUserMessage","author","respondToUserInput","input","matchedResponse","find","response","toLowerCase","Query","botResponseText","Response","className","children","ref","map","message","index","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onMouseEnter","onFocus","type","onChange","placeholder","style","padding","fontsize","height","width","_c","$RefreshReg$"],"sources":["C:/Users/parth/Desktop/RAYO/accessible-signup/src/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './ChatBot.css';\r\nimport responses from './test.json'; // Adjust the import path as necessary\r\n\r\n\r\nfunction ChatBot() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n  const chatLiveRegionRef = useRef(null); // Ref for the live region to announce updates\r\n\r\n  const speakWithDelay = (text) => {\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      speechSynthesis.cancel(); // Clear any previously scheduled speech synthesis\r\n      setTimeout(() => {\r\n        speechSynthesis.speak(utterance); // Delayed speech synthesis\r\n      }, 100); // Adjust the delay time as needed\r\n    } else {\r\n      console.error(\"Your browser does not support speech synthesis.\");\r\n    }\r\n  };\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(scrollToBottom, [messages]);\r\n\r\n  const speak = (text) => {\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.rate = 0.8; // Adjust the speaking rate; lower values mean slower speech\r\n      speechSynthesis.speak(utterance);\r\n    }\r\n  };\r\n\r\n  const handleUserInput = (event) => {\r\n    setUserInput(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!userInput.trim()) return;\r\n\r\n    const newUserMessage = { text: userInput, author: 'user' };\r\n    setMessages([...messages, newUserMessage]);\r\n    setUserInput('');\r\n    // Optionally, speak the user's message\r\n    // speak(`You said: ${newUserMessage.text}`);\r\n    respondToUserInput(newUserMessage.text);\r\n  };\r\n\r\n  const respondToUserInput = (input) => {\r\n    const matchedResponse = responses.find(response => input.trim().toLowerCase() === response.Query.toLowerCase());\r\n    const botResponseText = matchedResponse ? matchedResponse.Response : \"Sorry, I don't understand that.\";\r\n  \r\n    setTimeout(() => {\r\n      setMessages(messages => [...messages, { text: botResponseText, author: 'bot' }]);\r\n      speak(botResponseText); // This should trigger the speech synthesis\r\n    }, 500);\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"cb-chatbot\" aria-live=\"polite\" aria-atomic=\"true\">\r\n      <div className=\"cb-messages\" ref={chatLiveRegionRef} aria-relevant=\"additions\" aria-live=\"assertive\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`cb-message cb-${message.author}`} tabIndex=\"0\">\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <form onSubmit={handleSubmit} className=\"cb-form\">\r\n        <input\r\n          onMouseEnter={() => speakWithDelay(\"Click to talk to the chatbot\")}\r\n          onFocus={() => speakWithDelay(\"Type in your query and press enter\")}\r\n          className=\"cb-input\"\r\n          type=\"text\"\r\n          value={userInput}\r\n          onChange={handleUserInput}\r\n          placeholder=\"Ask me something...\"\r\n          aria-label=\"Type your message here\"\r\n        />\r\n          <button\r\n            onMouseEnter={() => speakWithDelay(\"Click to send\")}\r\n            onFocus={() => speakWithDelay(\"Press enter to send\")}\r\n            type=\"submit\"\r\n            className=\"cb-button\"\r\n            style={{\r\n              padding: '5px 5px', \r\n              fontsize: '1.4em', \r\n              height: '60px', \r\n              width: 'auto', \r\n            }}\r\n          >\r\n            SEND\r\n          </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}