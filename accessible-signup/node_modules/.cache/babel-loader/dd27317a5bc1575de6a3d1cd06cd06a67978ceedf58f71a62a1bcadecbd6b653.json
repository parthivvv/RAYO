{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parth\\\\Desktop\\\\RAYO\\\\accessible-signup\\\\src\\\\AccessibleForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './AccessibleForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccessibleForm = ({\n  formType\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const speakWithDelay = text => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      speechSynthesis.cancel(); // Clear any previously scheduled speech synthesis\n      setTimeout(() => {\n        speechSynthesis.speak(utterance); // Delayed speech synthesis\n      }, 100); // Adjust the delay time as needed\n    } else {\n      console.error(\"Your browser does not support speech synthesis.\");\n    }\n  };\n  // Clear form data and errors when formType changes\n  useEffect(() => {\n    // Reset form data, errors, and submission state when formType changes\n    setFormData({\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    });\n    setFormErrors({});\n    setIsSubmitting(false); // Reset isSubmitting to false on form type change\n  }, [formType]);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const errors = validate(formData);\n    setFormErrors(errors);\n    if (Object.keys(errors).length === 0) {\n      setIsSubmitting(true);\n\n      // Determine the correct endpoint based on the formType\n      const endpoint = formType === 'signup' ? '/signup' : '/signin';\n\n      // Use fetch to send a POST request to your server\n      try {\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(formData)\n        });\n        const data = await response.json();\n        if (response.ok) {\n          // Handle success\n          console.log(data);\n          speak(formType === 'signup' ? \"Sign Up Successful\" : \"Sign In Successful\");\n          // Reset form or redirect the user here\n          // Example: Resetting form data\n          setFormData({\n            name: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n          });\n        } else {\n          // Handle server-side validation errors (if any)\n          speak(\"An error occurred, please check your information and try again.\");\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        speak(\"An error occurred. Please try again.\");\n      }\n      setIsSubmitting(false);\n    } else {\n      // Speak all error messages\n      Object.values(errors).forEach(error => speakWithDelay(error));\n    }\n  };\n  useEffect(() => {\n    if (Object.keys(formErrors).length === 0 && isSubmitting) {\n      // Handle form submission logic here\n      setIsSubmitting(false);\n    }\n  }, [formErrors]);\n  const validate = values => {\n    const errors = {};\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Simple regex for email validation\n\n    if (!values.email) {\n      errors.email = 'Email is required';\n    } else if (!emailRegex.test(values.email)) {\n      errors.email = 'Email is invalid';\n    }\n    if (!values.password) {\n      errors.password = 'Password is required';\n    }\n    if (formType === 'signup') {\n      if (!values.name) {\n        errors.name = 'Name is required';\n      }\n      if (values.password !== values.confirmPassword) {\n        errors.confirmPassword = 'Passwords do not match';\n      }\n    }\n    return errors;\n  };\n  const speak = text => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      speechSynthesis.speak(utterance);\n    } else {\n      console.error(\"Your browser does not support speech synthesis.\");\n    }\n  };\n  useEffect(() => {\n    if (isSubmitting) {\n      const firstErrorField = Object.keys(formErrors)[0];\n      if (firstErrorField) {\n        document.getElementById(firstErrorField).focus();\n      }\n    }\n  }, [formErrors, isSubmitting]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    \"aria-labelledby\": \"formHeading\",\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"formHeading\",\n      children: formType === 'signup' ? 'SIGN UP' : 'SIGN IN'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), formType === 'signup' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        onFocus: () => speak(\"Please enter your name.\"),\n        \"aria-describedby\": \"nameError\",\n        \"aria-invalid\": !!formErrors.name,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), formErrors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"nameError\",\n        className: \"form__error\",\n        children: formErrors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        onFocus: () => speak(\"Please enter your email address.\"),\n        \"aria-describedby\": \"emailError\",\n        \"aria-invalid\": !!formErrors.email,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), formErrors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        className: \"form__error\",\n        children: formErrors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        onFocus: () => speak(\"Please enter your password.\"),\n        \"aria-describedby\": \"passwordError\",\n        \"aria-invalid\": !!formErrors.password,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), formErrors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"passwordError\",\n        className: \"form__error\",\n        children: formErrors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), formType === 'signup' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"confirmPassword\",\n        name: \"confirmPassword\",\n        value: formData.confirmPassword,\n        onChange: handleChange,\n        onFocus: () => speak(\"Please enter your password again for confirmation.\"),\n        \"aria-describedby\": \"confirmPasswordError\",\n        \"aria-invalid\": !!formErrors.confirmPassword,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), formErrors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"confirmPasswordError\",\n        className: \"form__error\",\n        children: formErrors.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onMouseEnter: () => speakWithDelay(\"Do you want to confirm sign up\"),\n      type: \"submit\",\n      children: formType === 'signup' ? 'SIGN UP' : 'SIGN IN'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(AccessibleForm, \"+kelBBUlhEzxU4DdOfF/F2fbDzM=\");\n_c = AccessibleForm;\nexport default AccessibleForm;\nvar _c;\n$RefreshReg$(_c, \"AccessibleForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AccessibleForm","formType","_s","formData","setFormData","name","email","password","confirmPassword","formErrors","setFormErrors","isSubmitting","setIsSubmitting","speakWithDelay","text","window","utterance","SpeechSynthesisUtterance","speechSynthesis","cancel","setTimeout","speak","console","error","handleChange","event","value","target","handleSubmit","preventDefault","errors","validate","Object","keys","length","endpoint","response","fetch","method","headers","body","JSON","stringify","data","json","ok","log","values","forEach","emailRegex","test","firstErrorField","document","getElementById","focus","onSubmit","noValidate","children","id","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","onFocus","required","className","onMouseEnter","_c","$RefreshReg$"],"sources":["C:/Users/parth/Desktop/RAYO/accessible-signup/src/AccessibleForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './AccessibleForm.css';\r\n\r\nconst AccessibleForm = ({ formType }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const speakWithDelay = (text) => {\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      speechSynthesis.cancel(); // Clear any previously scheduled speech synthesis\r\n      setTimeout(() => {\r\n        speechSynthesis.speak(utterance); // Delayed speech synthesis\r\n      }, 100); // Adjust the delay time as needed\r\n    } else {\r\n      console.error(\"Your browser does not support speech synthesis.\");\r\n    }\r\n  };\r\n  // Clear form data and errors when formType changes\r\n  useEffect(() => {\r\n    // Reset form data, errors, and submission state when formType changes\r\n    setFormData({\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n    });\r\n    setFormErrors({});\r\n    setIsSubmitting(false); // Reset isSubmitting to false on form type change\r\n  }, [formType]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n  event.preventDefault();\r\n\r\n  const errors = validate(formData);\r\n  setFormErrors(errors);\r\n\r\n  if (Object.keys(errors).length === 0) {\r\n    setIsSubmitting(true);\r\n\r\n    // Determine the correct endpoint based on the formType\r\n    const endpoint = formType === 'signup' ? '/signup' : '/signin';\r\n\r\n    // Use fetch to send a POST request to your server\r\n    try {\r\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Handle success\r\n        console.log(data);\r\n        speak(formType === 'signup' ? \"Sign Up Successful\" : \"Sign In Successful\");\r\n        // Reset form or redirect the user here\r\n        // Example: Resetting form data\r\n        setFormData({\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n          confirmPassword: '',\r\n        });\r\n      } else {\r\n        // Handle server-side validation errors (if any)\r\n        speak(\"An error occurred, please check your information and try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      speak(\"An error occurred. Please try again.\");\r\n    }\r\n\r\n    setIsSubmitting(false);\r\n  } else {\r\n    // Speak all error messages\r\n    Object.values(errors).forEach(error => speakWithDelay(error));\r\n  }\r\n};\r\n\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    if (Object.keys(formErrors).length === 0 && isSubmitting) {\r\n      // Handle form submission logic here\r\n      setIsSubmitting(false);\r\n    }\r\n  }, [formErrors]);\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Simple regex for email validation\r\n\r\n    if (!values.email) {\r\n      errors.email = 'Email is required';\r\n    } else if (!emailRegex.test(values.email)) {\r\n      errors.email = 'Email is invalid';\r\n    }\r\n    if (!values.password) {\r\n      errors.password = 'Password is required';\r\n    }\r\n    if (formType === 'signup') {\r\n      if (!values.name) {\r\n        errors.name = 'Name is required';\r\n      }\r\n      if (values.password !== values.confirmPassword) {\r\n        errors.confirmPassword = 'Passwords do not match';\r\n      }\r\n    }\r\n    return errors;\r\n  };\r\n  const speak = (text) => {\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      speechSynthesis.speak(utterance);\r\n    } else {\r\n      console.error(\"Your browser does not support speech synthesis.\");\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    if (isSubmitting) {\r\n      const firstErrorField = Object.keys(formErrors)[0];\r\n      if (firstErrorField) {\r\n        document.getElementById(firstErrorField).focus();\r\n      }\r\n    }\r\n  }, [formErrors, isSubmitting]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} aria-labelledby=\"formHeading\" noValidate>\r\n      <h1 id=\"formHeading\">{formType === 'signup' ? 'SIGN UP' : 'SIGN IN'}</h1>\r\n      {formType === 'signup' && (\r\n        <div>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            onFocus={() => speak(\"Please enter your name.\")}\r\n            aria-describedby=\"nameError\"\r\n            aria-invalid={!!formErrors.name}\r\n            required\r\n          />\r\n          {formErrors.name && (\r\n            <div id=\"nameError\" className=\"form__error\">\r\n              {formErrors.name}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          onFocus={() => speak(\"Please enter your email address.\")}\r\n          aria-describedby=\"emailError\"\r\n          aria-invalid={!!formErrors.email}\r\n          required\r\n        />\r\n        {formErrors.email && (\r\n          <div id=\"emailError\" className=\"form__error\">\r\n            {formErrors.email}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          onFocus={() => speak(\"Please enter your password.\")}\r\n          aria-describedby=\"passwordError\"\r\n          aria-invalid={!!formErrors.password}\r\n          required\r\n        />\r\n        {formErrors.password && (\r\n          <div id=\"passwordError\" className=\"form__error\">\r\n            {formErrors.password}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {formType === 'signup' && (\r\n        <div>\r\n          <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            value={formData.confirmPassword}\r\n            onChange={handleChange}\r\n            onFocus={() => speak(\"Please enter your password again for confirmation.\")}\r\n            aria-describedby=\"confirmPasswordError\"\r\n            aria-invalid={!!formErrors.confirmPassword}\r\n            required\r\n          />\r\n          {formErrors.confirmPassword && (\r\n            <div id=\"confirmPasswordError\" className=\"form__error\">\r\n              {formErrors.confirmPassword}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      <button \r\n        onMouseEnter={() => speakWithDelay(\"Do you want to confirm sign up\")}\r\n        type=\"submit\">{formType === 'signup' ? 'SIGN UP' : 'SIGN IN'}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AccessibleForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}